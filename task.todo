✓ Secure Authentication System
✓ Registration System
✓ Basic Webdesign using standards (XHTML & CSS)
✓ First Page and Navigation
✓ User Database Relational Table
✓ Rights and Roles Database Relational Table. Different levels of authorization implementation.
✓ Questions Database Hibrid Table
✓ User interfaces for User (edit, view, change password)
✓ Email validation on Registration System
✓ Users can reset their password
✓ Admin interfaces for users
✓ It is possible to disable users if needed
✓ Change user roles and displaying it in their profile
✓ Only users can edit own profile
✓ Admin interfaces for questions (new, edit, delete, show)
✓ Only accept valid XML documents
✓ table RESULTS
✓ new table called "EXAMS" where I'd be storing all the questions for 3 variations of the fixed test (or more).  The system should randomly choose between these 3 test variations. Will need a joint table for exams_questions
✓ new table answers
✓ new table exam_sessions
✓ Admin interfaces to create exams (index, new, create, edit, update, show, destroy)
✓ Implementation of the sequential system for the exam
✓ 60 minutes warning plus time for question in flash
✓ timeago in rails please
✓ clean up form with x and valid
✓ User can only take one exam every seven days and only up to 3 times.
✓ Results controller and view must be done.
- Prepare gedit for some real rails action
  http://rubymm.blogspot.com/2007/08/make-gedit-behave-roughly-like-textmate.html
  http://ca.rroll.net/2008/02/05/ruby-on-rails-development-with-gedit/
  http://www.railsforum.com/viewtopic.php?pid=56046
  http://www.railsforum.com/viewtopic.php?pid=45685
  http://live.gnome.org/Gedit/Plugins
- Integration with IBM_DB
- answer controller needs xml
- Print diploma pdf-format
- Admin interfaces for exams with categories for easier selection
- More information on tables from xml document (in exams and questions)
- full ibm_db integration
- bug fixes
